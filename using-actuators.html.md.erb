---
title: Using Spring Boot Actuators with Apps Manager
owner: Apps Manager
---

This document describes how to view and manage app information from Spring Boot Actuator in Apps Manager. 

## <a id="prereq"></a>Prerequisites

The Apps Manager integration with Spring Boot Actuator requires the following:

* Spring Boot v1.5 or later
* Completing the procedures in [Configure Spring Boot Actuator Endpoints for Apps Manager](./spring-boot-actuators.html). 
	<br>
	After your configure your app, Apps Manager displays the Spring Boot logo next to its name on the app page:

	![Icon](actuator-icon.png)

## <a id="view-build"></a>View Build and Git Information for Your App

To view the data that your app sends to its `/info` Actuator endpoint, select the **Settings** tab:

![Info](info.png)
	
In the upper right of the app page, Apps Manager also displays the SHA of your app code repository from the latest build:
	
![Git sha](git-sha.png)

## <a id="view-app-health"></a>View App Health 

To view the health-check data that your app sends to its `/health` Actuator endpoints, select the **Overview** tab and click an instance under the **Instances** section:

![Info](hc.png)

## <a id="view-thread"></a>View Thread Dump 

To trigger and view a thread dump from your app to its `/dump` Actuator endpoint, select the **Threads** tab and click the **Refresh** button. 

![Thread Dump](thread_dump.png)

You can click each thread to expand and view its details. You can also modify which threads appear on the page using the **Instance** and **Show** dropdown boxes.

## <a id="view-trace"></a>View Request Traces

To retrieve and view tracing information from the `/trace` Actuator endpoint of your app, select the **Trace** tab and click the **Refresh** button.

![Trace](trace.png)

This page displays the last 100 requests from your app. You can click each individual request to expand and view its trace details. You can modify which requests appear on the page using the **Instance** dropdown box.

## <a id="view-heap"></a>Download Heap Dump

To trigger and view a heap dump from your app sends to its `/heapdump` endpoint, select the settings dropdown for an instance of your app and click **Heap Dump**. This downloads a `.zip` file. 

![Heap dump](heap-dump.png)

## <a id="manage-log-levels"></a> Manage Log Levels

Spring Boot apps include _loggers_ for many provided and user components of the app. You can set the log level for each logger in Apps Manager. 

To view the **Configure Logging Levels** screen, select the **Logs** tab and click the **Configure Logging Levels** button. 

![Configure Logging Levels](config-log-levels.png)

Apps Manager displays the default log level for each logger in gray. 

![Defaults](default-levels.png)

You can modify the log level for any logger by clicking the desired level in the logger row as in the image below. Whenever you set a log level, the following happens:

* The log level becomes blue to indicate that it is user-configured.
* Each child namespace of the logger inherits the log level.
	<p class="note"><strong>Note</strong>: You can manually set any of the child loggers to override this inheritance.</p>

![Set Log level](set-levels.png)

All of the loggers with user-configured logging levels float to the top of the list.

![Float to top](float-levels.png)

You can reset log levels by clicking the white dot displayed on the current log level.

![Reset Logs](reset-logs.png)

You can also filter what loggers you see using the **Filter Loggers** textbox.

![Filter Loggers](filter-loggers.png)


 



